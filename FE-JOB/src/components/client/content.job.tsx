import React, { useState } from "react";
import { FiMapPin, FiClock, FiBriefcase } from "react-icons/fi";
import styles from "../../styles/content.job.module.scss";

// Mock data cho danh s√°ch job
const mockJobs = [
  {
    id: 1,
    title: "ReactJS Frontend Developer (JavaScript, TypeScript)",
    company: "Goline Corporation",
    location: "H√† N·ªôi",
    tags: ["JavaScript", "Bootstrap", "CSS", "HTML", "ReactJS", "TypeScript"],
    attractive: true,
    description: "L√†m vi·ªác v·ªõi c√°c c√¥ng ngh·ªá m·ªõi nh·∫•t. Lƒ©nh v·ª±c ch·ª©ng kho√°n, t√†i ch√≠nh h·∫•p d·∫´n. Li√™n t·ª•c ƒë∆∞·ª£c ƒë√†o t·∫°o chuy√™n m√¥n, kƒ© nƒÉng.",
    detail: `- L√†m vi·ªác v·ªõi c√°c c√¥ng ngh·ªá m·ªõi nh·∫•t\n- Lƒ©nh v·ª±c ch·ª©ng kho√°n, t√†i ch√≠nh h·∫•p d·∫´n\n- Li√™n t·ª•c ƒë∆∞·ª£c ƒë√†o t·∫°o chuy√™n m√¥n, kƒ© nƒÉng`,
  },
  {
    id: 2,
    title: "Cloud DevOps Lead - AWS",
    company: "TymeX",
    location: "TP H·ªì Ch√≠ Minh",
    tags: ["AWS", "AWS Lambda", "Kafka", "Java", "Microservices"],
    attractive: true,
    description: "You'll love it",
    detail: `- Qu·∫£n l√Ω h·ªá th·ªëng cloud\n- L√£nh ƒë·∫°o team DevOps\n- L√†m vi·ªác v·ªõi AWS Lambda, Kafka, Java, Microservices`,
  },
  {
    id: 3,
    title: "Information Security Engineer (Networking, System, Risk)",
    company: "ABC Corp",
    location: "H√† N·ªôi",
    tags: ["Security", "Networking", "System", "Risk"],
    attractive: true,
    description: "C∆° h·ªôi ph√°t tri·ªÉn chuy√™n s√¢u v·ªÅ b·∫£o m·∫≠t",
    detail: `- ƒê√°nh gi√° r·ªßi ro h·ªá th·ªëng\n- Tri·ªÉn khai gi·∫£i ph√°p b·∫£o m·∫≠t\n- L√†m vi·ªác v·ªõi c√°c h·ªá th·ªëng l·ªõn`,
  },
  {
    id: 4,
    title: "Information Security Engineer (Networking, System, Risk)",
    company: "ABC Corp",
    location: "H√† N·ªôi",
    tags: ["Security", "Networking", "System", "Risk"],
    attractive: true,
    description: "C∆° h·ªôi ph√°t tri·ªÉn chuy√™n s√¢u v·ªÅ b·∫£o m·∫≠t",
    detail: `- ƒê√°nh gi√° r·ªßi ro h·ªá th·ªëng\n- Tri·ªÉn khai gi·∫£i ph√°p b·∫£o m·∫≠t\n- L√†m vi·ªác v·ªõi c√°c h·ªá th·ªëng l·ªõn`,
  },
  {
    id: 5,
    title: "Information Security Engineer (Networking, System, Risk)",
    company: "ABC Corp",
    location: "H√† N·ªôi",
    tags: ["Security", "Networking", "System", "Risk"],
    attractive: true,
    description: "C∆° h·ªôi ph√°t tri·ªÉn chuy√™n s√¢u v·ªÅ b·∫£o m·∫≠t",
    detail: `- ƒê√°nh gi√° r·ªßi ro h·ªá th·ªëng\n- Tri·ªÉn khai gi·∫£i ph√°p b·∫£o m·∫≠t\n- L√†m vi·ªác v·ªõi c√°c h·ªá th·ªëng l·ªõn`,
  },
  {
    id: 6,
    title: "Information Security Engineer (Networking, System, Risk)",
    company: "ABC Corp",
    location: "H√† N·ªôi",
    tags: ["Security", "Networking", "System", "Risk"],
    attractive: true,
    description: "C∆° h·ªôi ph√°t tri·ªÉn chuy√™n s√¢u v·ªÅ b·∫£o m·∫≠t",
    detail: `- ƒê√°nh gi√° r·ªßi ro h·ªá th·ªëng\n- Tri·ªÉn khai gi·∫£i ph√°p b·∫£o m·∫≠t\n- L√†m vi·ªác v·ªõi c√°c h·ªá th·ªëng l·ªõn`,
  },

];

const ContentJob = () => {
  const [selectedJob, setSelectedJob] = useState(mockJobs[0]);
  const [favoriteJobs, setFavoriteJobs] = useState<number[]>([]);

  const isFavorite = favoriteJobs.includes(selectedJob.id);
  const handleToggleFavorite = () => {
    setFavoriteJobs((prev) =>
      isFavorite ? prev.filter((id) => id !== selectedJob.id) : [...prev, selectedJob.id]
    );
  };

  return (
    <div className="container mt-3">
      <div className="row">
        {/* Danh s√°ch job b√™n tr√°i */}
        <div className="col-5 ">
          <div className={styles.jobListWrapper}>
            {mockJobs.map((job) => (
              <div
                key={job.id}
                onClick={() => setSelectedJob(job)}
                className={
                  job.id === selectedJob.id
                    ? `${styles.jobItem} ${styles.selected}`
                    : styles.jobItem
                }
              >
                <div className={styles.jobTitle}>{job.title}</div>
                <div className={styles.jobListCompanyRow}>
                  <div className={styles.companyLogo} style={{ width: 40, height: 40, fontSize: '1.2rem' }}>
                    {job.company?.[0] || "?"}
                  </div>
                  <div className={styles.jobCompany}>{job.company} - {job.location}</div>
                </div>
                <div className={styles.tagList}>
                  {job.tags.map((tag) => (
                    <span key={tag} className={styles.tag}>{tag}</span>
                  ))}
                </div>
                <div className={job.attractive ? styles.attractive : styles.normalDesc}>
                  {job.attractive ? <span style={{ marginRight: 4 }}>üí≤</span> : null}
                  {job.attractive ? "Very attractive!!!" : job.description}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Chi ti·∫øt job b√™n ph·∫£i */}
        <div className="col-7">
          <div className={styles.detailWrapper}>
            <div className={styles.detailHeaderRow}>
              <div className={styles.companyLogo}>
                {selectedJob.company?.[0] || "?"}
              </div>
              <div className={styles.detailInfoBlock}>
                <h2 className={styles.detailTitle}>{selectedJob.title}</h2>
                <div className={styles.detailCompany}>{selectedJob.company}</div>
                <div className={selectedJob.attractive ? styles.attractive : styles.normalDesc}>
                  {selectedJob.attractive ? <span style={{ marginRight: 4 }}>üí≤</span> : null}
                  {selectedJob.attractive ? "Very attractive!!!" : selectedJob.description}
                </div>
              </div>
            </div>
            {/* N√∫t ·ª©ng tuy·ªÉn v√† icon y√™u th√≠ch */}
            <div className={styles.applyRow}>
              <button className={styles.applyBtn}>
                ·ª®ng tuy·ªÉn
              </button>
              <button
                className={styles.heartBtn}
                onClick={handleToggleFavorite}
                aria-label={isFavorite ? "B·ªè y√™u th√≠ch" : "Th√™m v√†o y√™u th√≠ch"}
                type="button"
              >
                <span className={styles.heartIcon} style={{ color: isFavorite ? '#ff424e' : '#bbb' }}>
                  {isFavorite ? '‚ô•' : '‚ô°'}
                </span>
              </button>
            </div>
            <hr />
            <div className="container mx-0 px-0">
              <div className={styles.detailInfoRow}>
                <div className={styles.detailLocation}>
                  <FiMapPin style={{ marginRight: 6, fontSize: '1.1em', verticalAlign: 'middle' }} />
                  {selectedJob.location}
                </div>
                <div className={styles.detailWorkplace}>
                  <FiBriefcase style={{ marginRight: 6, marginBottom: '4px', fontSize: '1em', verticalAlign: 'middle' }} />
                  VƒÉn ph√≤ng
                </div>
                <div className={styles.detailTime}>
                  <FiClock style={{ marginRight: 6, fontSize: '1em', verticalAlign: 'middle' }} />
                  4 gi·ªù tr∆∞·ªõc
                </div>
              </div>
              <div className={`${styles.detailInfoReq}`}>
                <div className={`${styles.detailSkill} d-flex align-items-center`}>
                  <span className={`${styles.detailLabel} me-5`}>K·ªπ nƒÉng: </span>
                  <div className={styles.tagList}>
                    {selectedJob.tags.map((tag) => (
                      <span key={tag} className={styles.tag}>{tag}</span>
                    ))}
                  </div>
                </div>
                <div className={`${styles.detailSkill} d-flex align-items-center`}>
                  <span className={`${styles.detailLabel} me-5`}>Chuy√™n m√¥n: </span>
                  <div className={styles.tagList}>
                    <span>K·ªπ s∆∞ ƒë√°m m√¢y</span>
                  </div>

                </div>
                <div className={`${styles.detailSkill} d-flex align-items-center`}>
                  <span className={`${styles.detailLabel} me-5`}>Lƒ©nh v·ª±c: </span>
                  <div className={styles.tagList}>
                    <span>D·ªãch v·ª• v√† t∆∞ v·∫•n IT</span>
                  </div>

                </div>
              </div>
              <div className={`${styles.reason}`}>
                
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContentJob;
